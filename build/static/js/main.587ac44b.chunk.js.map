{"version":3,"sources":["firebase/firebase.js","actions/auth.js","components/Protected/ProtectedRoute.js","components/Navbar/Navbar.js","components/Navbar/TopNav.js","components/Home/Home.js","components/Landing/Landing.js","components/Login/Login.js","components/Signup/Signup.js","components/404/NotFound.js","components/Listing/View.js","components/Listing/Listing.js","components/Listing/CreateListing.js","components/Project/View.js","components/Project/Project.js","components/Project/CreateProject.js","components/Settings/Account.js","app.js","reducers/index.js","reducers/auth.js","Root.js","configureStore.js","index.js"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","myFirebase","firebase","initializeApp","firestore","enablePersistence","db","storage","receiveLogin","user","type","ProtectedRoute","Component","component","isAuthenticated","isVerifying","render","props","to","pathname","state","from","location","connect","auth","isLoggingOut","isFetching","dispatch","handleLogout","signOut","then","catch","error","logoutError","className","displayName","charAt","photoAlt","Name","exact","activeClassName","onClick","TopNav","Home","isLoggingIn","loginError","formik","useFormik","initialValues","email","password","onSubmit","values","signInWithEmailAndPassword","loginUser","style","textDecoration","handleSubmit","htmlFor","id","name","onChange","handleChange","value","isSigningUp","signupError","username","confirm","createUserWithEmailAndPassword","result","updateProfile","collection","add","created","Date","uid","signupUser","console","log","NotFound","job","isFetchingJob","Object","entries","slice","map","item","index","title","key","time","dueMonth","toLocaleString","month","dueDay","day","dueDate","parseInt","duration","des","category","Listing","BUTTONS","isAddingJob","addingJobError","useState","setState","fulltime","remote","data","today","getTime","owner","currentUser","application","doc","set","merge","addJobError","placeholder","bt","button","tmp","includes","filter","el","push","handleButton","handleReset","project","isFetchingProject","skills","Project","isAddingProject","addingProjectError","skill","split","proposal","addProjectError","required","maxLength","imageUrl","setImageUrl","imageFile","setImageFile","profile","bio","gender","image","size","alert","ref","child","put","uploadError","event","target","files","URL","createObjectURL","accept","src","width","alt","useEffect","userId","where","get","snap","myData","forEach","dataError","myDocs","jobError","projectError","path","Landing","CreateListing","CreateProject","Account","Login","Signup","combineReducers","fetchingError","isUploading","fetchingJobError","fetchingProjectError","action","store","persistedState","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunkMiddleware","onAuthStateChanged","configureStore","Root","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.587ac44b.chunk.js","sourcesContent":["/* eslint-disable linebreak-style */\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst devConfig = {\r\n  apiKey: process.env.REACT_APP_DEV_API_KEY,\r\n  authDomain: process.env.REACT_APP_DEV_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DEV_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_DEV_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_DEV_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_DEV_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_DEV_APP_ID,\r\n  measurementId: process.env.REACT_APP_DEV_MEASUREMENT_ID\r\n};\r\n\r\nconst prodConfig = {\r\n  apiKey: process.env.REACT_APP_PROD_API_KEY,\r\n  authDomain: process.env.REACT_APP_PROD_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_PROD_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROD_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_PROD_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_PROD_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_PROD_APP_ID,\r\n  measurementId: process.env.REACT_APP_PROD_MEASUREMENT_ID\r\n};\r\n\r\nconst config = process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\r\n\r\nexport const myFirebase = firebase.initializeApp(config);\r\nmyFirebase.firestore().enablePersistence();\r\nexport const db = myFirebase.firestore();\r\nexport const storage = myFirebase.storage();\r\n","/* eslint-disable linebreak-style */\r\nimport { myFirebase, db, storage } from '../firebase/firebase';\r\n\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\n\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\r\n\r\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAILURE = 'SIGNUP_FAILURE';\r\n\r\nexport const VERIFY_REQUEST = 'VERIFY_REQUEST';\r\nexport const VERIFY_SUCCESS = 'VERIFY_SUCCESS';\r\n\r\nexport const CREATE_PROJECT_REQUEST = 'CREATE_PROJECT_REQUEST';\r\nexport const CREATE_PROJECT_SUCCESS = 'CREATE_PROJECT_SUCCESS';\r\nexport const CREATE_PROJECT_FAILURE = 'CREATE_PROJECT_FAILURE';\r\n\r\nexport const CREATE_JOB_REQUEST = 'CREATE_JOB_REQUEST';\r\nexport const CREATE_JOB_SUCCESS = 'CREATE_JOB_SUCCESS';\r\nexport const CREATE_JOB_FAILURE = 'CREATE_JOB_FAILURE';\r\n\r\nexport const DATA_REQUEST = 'DATA_REQUEST';\r\nexport const DATA_SUCCESS = 'DATA_SUCCESS';\r\nexport const DATA_FAILURE = 'DATA_FAILURE';\r\n\r\nexport const IMAGE_UPLOAD_REQUEST = 'IMAGE_UPLOAD_REQUEST';\r\nexport const IMAGE_UPLOAD_SUCCESS = 'IMAGE_UPLOAD_SUCCESS';\r\nexport const IMAGE_UPLOAD_FAILURE = 'IMAGE_UPLOAD_FAILURE';\r\n\r\nexport const FETCH_JOBS_REQUEST = 'FETCH_JOBS_REQUEST';\r\nexport const FETCH_JOBS_SUCCESS = 'FETCH_JOBS_SUCCESS';\r\nexport const FETCH_JOBS_FAILURE = 'FETCH_JOBS_FAILURE';\r\n\r\nexport const FETCH_PROJECTS_REQUEST = 'FETCH_PROJECTS_REQUEST';\r\nexport const FETCH_PROJECTS_SUCCESS = 'FETCH_PROJECTS_SUCCESS';\r\nexport const FETCH_PROJECTS_FAILURE = 'FETCH_PROJECTS_FAILURE';\r\n\r\nconst requestLogin = () => ({ type: LOGIN_REQUEST });\r\nconst receiveLogin = (user) => ({ type: LOGIN_SUCCESS, user });\r\nconst loginError = (error) => ({ type: LOGIN_FAILURE, error });\r\n\r\nconst requestLogout = () => ({ type: LOGOUT_REQUEST });\r\nconst receiveLogout = () => ({ type: LOGOUT_SUCCESS });\r\nconst logoutError = (error) => ({ type: LOGOUT_FAILURE, error });\r\n\r\nconst requestSignup = () => ({ type: SIGNUP_REQUEST });\r\nconst receiveSignup = (user) => ({ type: SIGNUP_SUCCESS, user });\r\nconst signupError = (error) => ({ type: SIGNUP_FAILURE, error });\r\n\r\nconst verifyRequest = () => ({ type: VERIFY_REQUEST });\r\nconst verifySuccess = () => ({ type: VERIFY_SUCCESS });\r\n\r\nconst requestAddProject = () => ({ type: CREATE_PROJECT_REQUEST });\r\nconst receiveAddProject = () => ({ type: CREATE_PROJECT_SUCCESS });\r\nconst addProjectError = (error) => ({ type: CREATE_PROJECT_FAILURE, error });\r\n\r\nconst requestAddJob = () => ({ type: CREATE_JOB_REQUEST });\r\nconst receiveAddJob = () => ({ type: CREATE_JOB_SUCCESS });\r\nconst addJobError = (error) => ({ type: CREATE_JOB_FAILURE, error });\r\n\r\nconst requestData = () => ({ type: DATA_REQUEST });\r\nconst receiveData = (data) => ({ type: DATA_SUCCESS, data });\r\nconst dataError = (error) => ({ type: DATA_FAILURE, error });\r\n\r\nconst requestUpload = () => ({ type: IMAGE_UPLOAD_REQUEST });\r\nconst receiveUpload = () => ({ type: IMAGE_UPLOAD_SUCCESS });\r\nconst uploadError = (error) => ({ type: IMAGE_UPLOAD_FAILURE, error });\r\n\r\nconst requestJob = () => ({ type: FETCH_JOBS_REQUEST });\r\nconst receiveJob = (job) => ({ type: FETCH_JOBS_SUCCESS, job });\r\nconst jobError = (error) => ({ type: FETCH_JOBS_FAILURE, error });\r\n\r\n\r\nconst requestProject = () => ({ type: FETCH_PROJECTS_REQUEST });\r\nconst receiveProject = (project) => ({ type: FETCH_PROJECTS_SUCCESS, project });\r\nconst projectError = (error) => ({ type: FETCH_PROJECTS_FAILURE, error });\r\n\r\nexport const loginUser = (email, password) => (dispatch) => {\r\n  dispatch(requestLogin());\r\n  myFirebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => {\r\n      dispatch(receiveLogin(user));\r\n    })\r\n    .catch((error) => dispatch(loginError(error)));\r\n};\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n  dispatch(requestLogout());\r\n  myFirebase\r\n    .auth()\r\n    .signOut()\r\n    .then(() => {\r\n      dispatch(receiveLogout());\r\n    })\r\n    .catch((error) => {\r\n      dispatch(logoutError(error));\r\n    });\r\n};\r\n\r\nexport const signupUser = (name, username, email, password) => (dispatch) => {\r\n  dispatch(requestSignup());\r\n  myFirebase\r\n    .auth()\r\n    .createUserWithEmailAndPassword(email, password)\r\n    .then((result) => {\r\n      dispatch(receiveSignup(result.user));\r\n      result.user.updateProfile({ displayName: username });\r\n      db.collection('users').add({\r\n        created: new Date(),\r\n        email,\r\n        name,\r\n        id: result.user.uid\r\n      });\r\n    })\r\n    .catch((error) => dispatch(signupError(error)));\r\n};\r\n\r\nexport const verifyAuth = () => (dispatch) => {\r\n  dispatch(verifyRequest());\r\n  myFirebase.auth().onAuthStateChanged((user) => {\r\n    if (user !== null) {\r\n      dispatch(receiveLogin(user));\r\n    }\r\n    dispatch(verifySuccess());\r\n  });\r\n};\r\n\r\nexport const addProject = (data) => (dispatch) => {\r\n  dispatch(requestAddProject());\r\n  db.collection('projects')\r\n    .add({\r\n      title: data.title,\r\n      des: data.des,\r\n      category: data.category,\r\n      skill: data.skills,\r\n      duration: data.duration,\r\n      location: data.location,\r\n      remote: data.remote,\r\n      created: new Date(),\r\n      owner: myFirebase.auth().currentUser.uid,\r\n      proposal: []\r\n    })\r\n    .then(() => {\r\n      dispatch(receiveAddProject());\r\n      db.collection('current-p')\r\n        .doc('zyOKvi9gaRb4AimHvmJ')\r\n        .set({ job: { data } }, { merge: true });\r\n    })\r\n    .catch((error) => dispatch(addProjectError(error)));\r\n};\r\n\r\nexport const addJob = (data) => (dispatch) => {\r\n  dispatch(requestAddJob());\r\n  db.collection('jobs')\r\n    .add({\r\n      title: data.title,\r\n      des: data.des,\r\n      category: data.category,\r\n      fulltime: data.fulltime,\r\n      duration: data.duration,\r\n      location: data.location,\r\n      remote: data.remote,\r\n      created: new Date(),\r\n      owner: myFirebase.auth().currentUser.uid,\r\n      application: []\r\n    })\r\n    .then(() => {\r\n      dispatch(receiveAddJob());\r\n      db.collection('current')\r\n        .doc('xGsgiKaSe9UcDKpW8pQA')\r\n        .set({ job: { data } }, { merge: true });\r\n    })\r\n    .catch((error) => dispatch(addJobError(error)));\r\n};\r\n\r\nexport const userData = () => (dispatch) => {\r\n  dispatch(requestData());\r\n  const userId = myFirebase.auth().currentUser.uid;\r\n  db.collection('users')\r\n    .where('id', '==', userId)\r\n    .get()\r\n    .then((snap) => {\r\n      const myData = [];\r\n      snap.forEach((doc) => {\r\n        myData.push(doc.data());\r\n      });\r\n      dispatch(receiveData(myData[0]));\r\n    })\r\n    .catch((error) => dispatch(dataError(error)));\r\n};\r\n\r\nexport const uploadImage = (image) => (dispatch) => {\r\n  dispatch(requestUpload());\r\n  const storageRef = storage.ref();\r\n  const profileImage = storageRef.child(image.name);\r\n\r\n  profileImage\r\n    .put(image)\r\n    .then(() => {\r\n      dispatch(receiveUpload());\r\n    })\r\n    .catch((error) => dispatch(uploadError(error)));\r\n};\r\n\r\nexport const fetchJob = () => (dispatch) => {\r\n  dispatch(requestJob());\r\n  db.collection('current')\r\n    .get()\r\n    .then((snap) => {\r\n      const myDocs = [];\r\n      snap.forEach((doc) => {\r\n        myDocs.push(doc.data());\r\n      });\r\n      dispatch(receiveJob(myDocs[1]));\r\n    }).catch((error) => dispatch(jobError(error)));\r\n};\r\n\r\nexport const fetchProject = () => (dispatch) => {\r\n  dispatch(requestProject());\r\n  db.collection('current-p')\r\n    .get()\r\n    .then((snap) => {\r\n      const myDocs = [];\r\n      snap.forEach((doc) => {\r\n        myDocs.push(doc.data());\r\n      });\r\n      dispatch(receiveProject(myDocs[1]));\r\n    }).catch((error) => dispatch(projectError(error)));\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  isVerifying,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    render={(props) =>\r\n      isVerifying ? (\r\n        <div />\r\n      ) : isAuthenticated ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\nexport default ProtectedRoute;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { logoutUser } from '../../actions';\r\n\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nconst Navbar = (props) => {\r\n  const { user, isLoggingOut, dispatch, isFetching } = props;\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n  };\r\n\r\n  const photoAlt = () => {\r\n    if (isFetching === false) {\r\n      return (\r\n        <div className=\"no-image\">\r\n          <p>{user.displayName.charAt(0)}</p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  const Name = () => {\r\n    if (isFetching === false) {\r\n      return <p>{user.displayName}</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"side-nav\">\r\n      <div className=\"profile\">\r\n        <div className=\"photo\">{photoAlt()}</div>\r\n        <div className=\"name\">{Name()}</div>\r\n      </div>\r\n      <div className=\"home\">\r\n        <NavLink exact to=\"/app\" className=\"nav-link\" activeClassName=\"nav-active\">\r\n          <DashboardIcon />\r\n          <p>Dashboard</p>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"listing\">\r\n        <NavLink exact to=\"/listing\" className=\"nav-link\" activeClassName=\"nav-active\">\r\n          <WorkIcon />\r\n          <p>Job Listing</p>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"project\">\r\n        <NavLink exact to=\"/project\" className=\"nav-link\" activeClassName=\"nav-active\">\r\n          <AssignmentIcon />\r\n          <p>Project</p>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"c-listing\">\r\n        <NavLink exact to=\"/create-listing\" className=\"nav-link\" activeClassName=\"nav-active\">\r\n          <PostAddIcon />\r\n          <p>Post a job</p>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"c-project\">\r\n        <NavLink exact to=\"/create-project\" className=\"nav-link\" activeClassName=\"nav-active\">\r\n          <PostAddIcon />\r\n          <p>Post a project</p>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"account\">\r\n        <NavLink exact to=\"/account\" className=\"nav-link\" activeClassName=\"nav-active\">\r\n          <AccountCircleIcon />\r\n          <p>Account</p>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"settings\">\r\n        <NavLink exact to=\"/settings\" className=\"nav-link\">\r\n          <SettingsIcon />\r\n          <p>Settings</p>\r\n        </NavLink>\r\n      </div>\r\n      <div className=\"logout\">\r\n        <NavLink exact to=\"/logout\" className=\"nav-link\">\r\n          <PowerSettingsNewIcon onClick={handleLogout} />\r\n          <p onClick={handleLogout}>Logout</p>\r\n          {isLoggingOut && <NavLink to=\"/\" />}\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.auth.user,\r\n    isLoggingOut: state.auth.isLoggingOut,\r\n    isFetching: state.auth.isFetching\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from 'react';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\n\r\nconst TopNav = () => {\r\n  return (\r\n    <div className=\"topNav\">\r\n      <div>\r\n      <NotificationsIcon  className=\"icon-not\"/>\r\n      </div>\r\n      <div>\r\n        <LanguageIcon  className=\"icon-lang\"/>\r\n        <p>en</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import React from 'react';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport TopNav from '../Navbar/TopNav';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <div className=\"content\">\r\n        <TopNav />\r\n        <h2>Homepage</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Landing = (props) => {\r\n  const { isAuthenticated } = props;\r\n\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/app',\r\n          state: { from: props.location }\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"landing\">\r\n        <h1>This is the landing page</h1>\r\n        <Link to=\"/login\">\r\n          <button>Login</button>\r\n        </Link>\r\n        <Link to=\"signup\">\r\n          <button>Sign up</button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport { loginUser } from \"../../actions\";\r\n\r\nconst Login = (props) => {\r\n  const { isAuthenticated, loginError, dispatch } = props;\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\"\r\n    },\r\n    onSubmit: values => {\r\n      const { email, password } = values;\r\n      dispatch(loginUser(email, password));\r\n    }\r\n  });\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/app\" />;\r\n  } else {\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"cta-section\">\r\n          <div className=\"cta-head\">\r\n            <p>Building Your <span>Brand</span></p>\r\n            <p>Made Easy</p>\r\n          </div>\r\n          <div className=\"cta-des\">\r\n            <p>loremAdipisicing deserunt ex consectetur dolor aute excepteur qui et.</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-view\">\r\n          <div className=\"signup-link\">\r\n            <p>Don't have an account? <Link to=\"/signup\" className=\"link\" style={{ textDecoration: \"none\" }}><span>Sign up now</span></Link></p>\r\n          </div>\r\n          <div className=\"form\">\r\n            <div className=\"form-title\">\r\n              <p>Sign in to SkillsMatcher</p>\r\n            </div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <label htmlFor=\"email\">Username or Email Address</label>\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n              />\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.password}\r\n              />\r\n              {loginError && (<p>Incorrect email or password</p>)}\r\n              <button type=\"submit\" className=\"login-btn\">Sign In</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToprops (state) {\r\n  return {\r\n    isLoggingIn: state.auth.isLoggingIn,\r\n    loginError: state.auth.loginError,\r\n    isAuthenticated: state.auth.isAuthenticated\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToprops)(Login);\r\n","import React from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\nimport { useFormik } from \"formik\";\r\nimport { signupUser } from \"../../actions\";\r\n\r\nconst Signup = (props) => {\r\n  const { isAuthenticated, signupError, dispatch } = props;\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirm: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      // confirm password\r\n      const { name, username, email, password } = values;\r\n      dispatch(signupUser(name, username, email, password));\r\n      console.log(signupError);\r\n    },\r\n  });\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/app\" />;\r\n  } else {\r\n    return (\r\n      <div className=\"signup\">\r\n        <div className=\"cta-section\">\r\n          <div className=\"cta-head\">\r\n            <p>Building Your <span>Brand</span></p>\r\n            <p>Made Easy</p>\r\n          </div>\r\n          <div className=\"cta-des\">\r\n            <p>loremAdipisicing deserunt ex consectetur dolor aute excepteur qui et.</p>\r\n          </div>\r\n        </div>\r\n      <div className=\"form-view\">\r\n        <div className=\"signin-link\">\r\n          <Link to=\"/login\" className=\"link\" style={{ textDecoration: \"none\" }}><span>Sign In</span></Link>\r\n        </div>\r\n        <div className=\"form\">\r\n          <div className=\"form-title\">\r\n            <p>Sign up to SkillsMatcher</p>\r\n          </div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <label htmlFor=\"name\">name</label>\r\n          <input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.name}\r\n          />\r\n          <label htmlFor=\"username\">username</label>\r\n          <input\r\n            id=\"username\"\r\n            name=\"username\"\r\n            type=\"text\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.username}\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.email}\r\n          />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            id=\"password\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.password}\r\n          />\r\n          <label htmlFor=\"confirm\">Confirm password</label>\r\n          <input\r\n            id=\"confirm\"\r\n            name=\"confirm\"\r\n            type=\"password\"\r\n            onChange={formik.handleChange}\r\n            value={formik.values.confirm}\r\n          />\r\n          {signupError && (<p>Incorrect credentials</p>)}\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToprops(state) {\r\n  return {\r\n    isSigningUp: state.auth.isSigningUp,\r\n    signupError: state.auth.signupError,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToprops)(Signup);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"notfound\">\r\n      <h1>404 Page Not Found</h1>\r\n      <NavLink to=\"/app\">\r\n        <button>Back to home</button>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../styles/View.scss';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst View = (props) => {\r\n  const { job, isFetchingJob } = props;  \r\n  const dueDate = (time) => {\r\n    // const today = new Date().toLocaleString(\"en-US\", {year: \"numeric\", month: \"numeric\", day: 'numeric'});\r\n    // const dueYear = time.toLocaleString(\"en-US\", {year: \"numeric\"});\r\n    const dueMonth = time.toLocaleString(\"en-US\", {month: \"long\"});\r\n    const dueDay = time.toLocaleString(\"en-US\", {day: \"numeric\"});\r\n    return (`${dueDay}/${dueMonth}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-card\">\r\n      {isFetchingJob === false &&\r\n        Object.entries(job.job)\r\n          .slice(0, 20)\r\n          .map((item, index) => (\r\n            <div id={item[1].title} key={index} className=\"job\">\r\n              <div className=\"title\">{item[1].title}</div>\r\n              <div className=\"duration\">{ dueDate(new Date(parseInt(item[1].duration))) }</div>\r\n              <div className=\"des\">{item[1].des}</div>\r\n              <div className=\"category\">\r\n                <LabelIcon className=\"icon\"/>\r\n                {item[1].category}\r\n                </div>\r\n              <div className=\"location\">\r\n                <LocationOnIcon className=\"icon\"/>\r\n                {item[1].location}\r\n                </div>\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  job: state.auth.job,\r\n  isFetchingJob: state.auth.isFetchingJob\r\n});\r\n\r\nexport default connect(mapStateToProps)(View);\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport Navbar from '../Navbar/Navbar';\r\n\r\nimport '../../styles/listing.scss';\r\nimport TopNav from '../Navbar/TopNav';\r\nimport View from './View';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Listing = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <div className=\"content\">\r\n        <TopNav />\r\n        <div className=\"link-card\">\r\n          <NavLink exact to='/project' className=\"link-project\">Project</NavLink>\r\n          <NavLink exact to='/listing' className=\"link-listing\">Job Listing</NavLink>\r\n        </div>\r\n        <View />\r\n        <div className=\"search-card\">search card</div>\r\n        <div className=\"skill-card\">skill card</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Listing;","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addJob } from '../../actions';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport TopNav from '../Navbar/TopNav';\r\n\r\nimport '../../styles/Container.scss';\r\n\r\nconst BUTTONS = [\r\n  { title: 'business services', id: 'business' },\r\n  { title: 'information technology', id: 'information' },\r\n  { title: 'manufacturing', id: 'manufacturing' },\r\n  { title: 'finance', id: 'finance' },\r\n  { title: 'retail', id: 'retail' },\r\n  { title: 'accounting and legal', id: 'accounting' },\r\n  { title: 'construction and maintenance', id: 'construction' },\r\n  { title: 'media', id: 'media' },\r\n  { title: 'hospitality', id: 'hospitality' },\r\n  { title: 'other', id: 'other' }\r\n];\r\n\r\nconst CreateListing = (props) => {\r\n  const { dispatch } = props;\r\n  const [state, setState] = useState({ values: [] });\r\n\r\n  const handleButton = (button) => {\r\n    let tmp = state.values;\r\n    if (state.values.includes(button)) {\r\n      setState({\r\n        values: state.values.filter((el) => el !== button)\r\n      });\r\n    } else {\r\n      tmp.push(button);\r\n      setState({\r\n        values: tmp\r\n      });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      des: '',\r\n      category: [],\r\n      fulltime: false,\r\n      duration: '',\r\n      location: '',\r\n      remote: false\r\n    },\r\n    onSubmit: (values) => {\r\n      const today = new Date().getTime();\r\n      const month = 30.4375 * 24 * 60 * 1000;\r\n      values.duration = `${today + values.duration * month}`; \r\n      console.log(values);\r\n      values.category = state.values;\r\n      dispatch(addJob(values));\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <div className=\"content\">\r\n        <TopNav />\r\n        <div className=\"form\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input id=\"title\" name=\"title\" type=\"text\" onChange={formik.handleChange} value={formik.values.title} placeholder=\"Enter a job title here...\" />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"des\">Description</label>\r\n              <textarea id=\"des\" name=\"des\" type=\"text\" onChange={formik.handleChange} value={formik.values.des} />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label id=\"label\">Category</label>\r\n              {BUTTONS.map((bt) => (\r\n                <div key={bt.id} className=\"category\">\r\n                  <button\r\n                    type=\"button\"\r\n                    id={bt.id}\r\n                    onClick={() => handleButton(bt.id)}\r\n                    className={state.values.includes(bt.id) ? 'buttonPressed' : 'button'}\r\n                  >\r\n                    {bt.title}\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"fulltime\">Full Time</label>\r\n              <input\r\n                id=\"fulltime\"\r\n                name=\"fulltime\"\r\n                type=\"checkbox\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.fulltime}\r\n              />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"duration\">Duration</label>\r\n              <input\r\n                id=\"duration\"\r\n                name=\"duration\"\r\n                type=\"number\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.duration}\r\n              />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"location\">Location</label>\r\n              <input\r\n                id=\"location\"\r\n                name=\"location\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.location}\r\n              />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"remote\">Remote</label>\r\n              <input\r\n                id=\"remote\"\r\n                name=\"remote\"\r\n                type=\"checkbox\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.remote}\r\n              />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <button type=\"reset\" onClick={formik.handleReset}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <div className=\"fields\">\r\n              <button type=\"submit\">Confirm</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    isAddingJob: state.auth.isAddingJob,\r\n    addingJobError: state.auth.addingJobError,\r\n    error: state.auth.error\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CreateListing);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../../styles/View.scss';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\n\r\nconst View = (props) => {\r\n  const { project, isFetchingProject } = props;\r\n\r\n  const dueDate = (time) => {\r\n    // const today = new Date().toLocaleString(\"en-US\", {year: \"numeric\", month: \"numeric\", day: 'numeric'});\r\n    // const dueYear = time.toLocaleString(\"en-US\", {year: \"numeric\"});\r\n    const dueMonth = time.toLocaleString(\"en-US\", {month: \"long\"});\r\n    const dueDay = time.toLocaleString(\"en-US\", {day: \"numeric\"});\r\n    return (`${dueDay}/${dueMonth}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"view-card\">\r\n      {isFetchingProject === false &&\r\n        Object.entries(project.project)\r\n          .slice(0, 20)\r\n          .map((item, index) => (\r\n            <div id={item[1].title} key={index} className=\"job\">\r\n              <div className=\"title\">{item[1].title}</div>\r\n              <div className=\"duration\">{ dueDate(new Date(parseInt(item[1].duration))) }</div>\r\n              <div className=\"des\">{item[1].des}</div>\r\n              <div className=\"category\">\r\n                <LabelIcon className=\"icon\"/>\r\n                {item[1].category}\r\n                </div>\r\n              <div className=\"skills\">\r\n                {item[1].skills}\r\n                </div>\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.auth.project,\r\n  isFetchingProject: state.auth.isFetchingProject\r\n});\r\n\r\nexport default connect(mapStateToProps)(View);\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport Navbar from '../Navbar/Navbar';\r\nimport '../../styles/Container.scss';\r\nimport TopNav from '../Navbar/TopNav';\r\nimport View from './View';\r\n\r\nconst Project = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <div className=\"content\">\r\n        <TopNav />\r\n        <div className=\"link-card\">\r\n          <NavLink exact to='/project' className=\"link-listing\">Project</NavLink>\r\n          <NavLink exact to='/listing' className=\"link-project\">Job Listing</NavLink>\r\n        </div>\r\n        <View />\r\n        <div className=\"search-card\">seach-card</div>\r\n        <div className=\"skill-card\">skill-card</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Map state to props here\r\n\r\nexport default Project;\r\n","import React, { useState } from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addProject } from '../../actions';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport TopNav from '../Navbar/TopNav';\r\n\r\nimport '../../styles/Container.scss';\r\n\r\n// Data injection\r\n// import data from './mock2.json';\r\n\r\nconst BUTTONS = [\r\n  { title: 'business services', id: 'business' },\r\n  { title: 'information technology', id: 'information' },\r\n  { title: 'manufacturing', id: 'manufacturing' },\r\n  { title: 'finance', id: 'finance' },\r\n  { title: 'retail', id: 'retail' },\r\n  { title: 'accounting and legal', id: 'accounting' },\r\n  { title: 'construction and maintenance', id: 'construction' },\r\n  { title: 'media', id: 'media' },\r\n  { title: 'hospitality', id: 'hospitality' },\r\n  { title: 'other', id: 'other' }\r\n];\r\n\r\nconst CreateProject = (props) => {\r\n  const { dispatch } = props;\r\n  const [state, setState] = useState({ values: [] });\r\n\r\n  const handleButton = (button) => {\r\n    let tmp = state.values;\r\n    if (state.values.includes(button)) {\r\n      setState({\r\n        values: state.values.filter((el) => el !== button)\r\n      });\r\n    } else {\r\n      tmp.push(button);\r\n      setState({\r\n        values: tmp\r\n      });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      des: '',\r\n      category: [],\r\n      skill: [],\r\n      duration: '',\r\n      location: '',\r\n      remote: false\r\n    },\r\n    onSubmit: (values) => {\r\n      values.category = state.values;\r\n      const skills = values.skill.split(',');\r\n      values.skill = [...skills];\r\n      // Data injection\r\n      // Object.keys(data.data).map(key => dispatch(addProject(data.data[key])));\r\n      dispatch(addProject(values));\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <div className=\"content\">\r\n        <TopNav />\r\n        <div className=\"form\">\r\n          <form onSubmit={formik.handleSubmit}>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                id=\"title\"\r\n                name=\"title\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.title}\r\n                placeholder=\"Enter a project title here...\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"des\">Description</label>\r\n              <textarea\r\n                id=\"des\"\r\n                name=\"des\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.des}\r\n                maxLength=\"2000\"\r\n              />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label id=\"label\">Category</label>\r\n              {BUTTONS.map((bt) => (\r\n                <div key={bt.id} className=\"category\">\r\n                  <button\r\n                    type=\"button\"\r\n                    id={bt.id}\r\n                    onClick={() => handleButton(bt.id)}\r\n                    className={state.values.includes(bt.id) ? 'buttonPressed' : 'button'}\r\n                  >\r\n                    {bt.title}\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"fields\">\r\n              <div className=\"tooltip\">\r\n                <span></span>\r\n              </div>\r\n              <label htmlFor=\"skill\">Skills</label>\r\n              <input\r\n                id=\"skill\"\r\n                name=\"skill\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.skill}\r\n                maxLength=\"150\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"duration\">Duration in weeks</label>\r\n              <input\r\n                id=\"duration\"\r\n                name=\"duration\"\r\n                type=\"number\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.duration}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"location\">Location</label>\r\n              <input\r\n                id=\"location\"\r\n                name=\"location\"\r\n                type=\"text\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.location}\r\n              />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <label htmlFor=\"remote\">Remote</label>\r\n              <input\r\n                id=\"remote\"\r\n                name=\"remote\"\r\n                type=\"checkbox\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.remote}\r\n              />\r\n            </div>\r\n            <div className=\"fields\">\r\n              <button type=\"reset\" onClick={formik.handleReset}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n            <div className=\"fields\">\r\n              <button type=\"submit\">Confirm</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction mapStateToprops(state) {\r\n  return {\r\n    isAddingProject: state.auth.isAddingProject,\r\n    addingProjectError: state.auth.addingProjectError,\r\n    error: state.auth.error\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToprops)(CreateProject);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { uploadImage } from '../../actions';\r\n\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useFormik } from 'formik';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport TopNav from '../Navbar/TopNav';\r\n\r\nconst Account = (props) => {\r\n  const { dispatch } = props;\r\n\r\n  const [imageUrl, setImageUrl] = useState('');\r\n  const [imageFile, setImageFile] = useState('');\r\n\r\n  const handleImageAsFile = (event) => {\r\n    const image = event.target.files[0];\r\n    setImageUrl({ imageUrl: URL.createObjectURL(image) });\r\n    setImageFile({ imageFile: image });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      profile: '',\r\n      username: '',\r\n      bio: '',\r\n      gender: ''\r\n    },\r\n    onSubmit: (values) => {\r\n      values.profile = imageFile.imageFile;\r\n      if (values.profile.size > 2097152) {\r\n        alert (\"Unable to proceed, File is larger than 2mb\");\r\n      }\r\n      if (values.profile.size < 2097152) {\r\n        dispatch(uploadImage(values.profile));\r\n      }\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar />\r\n      <div className=\"content\">\r\n        <TopNav />\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <EditIcon />\r\n          <label htmlFor=\"profile\">Profile picture</label>\r\n          <input id=\"profile\" name=\"profile\" type=\"file\" onChange={handleImageAsFile} accept=\"image/*\" />\r\n          <img src={imageUrl.imageUrl} width=\"150px\" alt=\"profile\" />\r\n          <button type=\"submit\">Submit</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ user: state.auth.user, data: state.auth.data });\r\n\r\nexport default connect(mapStateToProps)(Account);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { fetchJob, userData, fetchProject } from './actions';\r\n\r\nimport ProtectedRoute from './components/Protected/ProtectedRoute';\r\nimport Home from './components/Home/Home';\r\nimport Landing from './components/Landing/Landing';\r\nimport Login from './components/Login/Login';\r\nimport Signup from './components/Signup/Signup';\r\nimport NotFound from './components/404/NotFound';\r\nimport Listing from './components/Listing/Listing';\r\nimport CreateListing from './components/Listing/CreateListing';\r\nimport Project from './components/Project/Project';\r\nimport CreateProject from './components/Project/CreateProject';\r\nimport Account from './components/Settings/Account';\r\n\r\nfunction App(props) {\r\n  const { isAuthenticated, isVerifying, dispatch } = props;\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated === true) {\r\n      dispatch(userData());\r\n      dispatch(fetchJob());\r\n      dispatch(fetchProject());\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Landing} />\r\n      <ProtectedRoute\r\n        exact\r\n        path=\"/app\"\r\n        component={Home}\r\n        isAuthenticated={isAuthenticated}\r\n        isVerifying={isVerifying}\r\n      />\r\n      <ProtectedRoute\r\n        exact\r\n        path=\"/listing\"\r\n        component={Listing}\r\n        isAuthenticated={isAuthenticated}\r\n        isVerifying={isVerifying}\r\n      />\r\n      <ProtectedRoute\r\n        exact\r\n        path=\"/create-listing\"\r\n        component={CreateListing}\r\n        isAuthenticated={isAuthenticated}\r\n        isVerifying={isVerifying}\r\n      />\r\n      <ProtectedRoute\r\n        exact\r\n        path=\"/project\"\r\n        component={Project}\r\n        isAuthenticated={isAuthenticated}\r\n        isVerifying={isVerifying}\r\n      />\r\n      <ProtectedRoute\r\n        exact\r\n        path=\"/create-project\"\r\n        component={CreateProject}\r\n        isAuthenticated={isAuthenticated}\r\n        isVerifying={isVerifying}\r\n      />\r\n      <ProtectedRoute\r\n        exact\r\n        path=\"/account\"\r\n        component={Account}\r\n        isAuthenticated={isAuthenticated}\r\n        isVerifying={isVerifying}\r\n      />\r\n      <Route path=\"/login\" component={Login} />\r\n      <Route path=\"/signup\" component={Signup} />\r\n      <Route path=\"*\" component={NotFound} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  isVerifying: state.auth.isVerifying\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","/* eslint-disable linebreak-style */\r\nimport { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({ auth });\r\n","/* eslint-disable linebreak-style */\r\nimport {\r\n  LOGIN_REQUEST,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  LOGOUT_REQUEST,\r\n  LOGOUT_SUCCESS,\r\n  LOGOUT_FAILURE,\r\n  SIGNUP_REQUEST,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILURE,\r\n  VERIFY_REQUEST,\r\n  VERIFY_SUCCESS,\r\n  CREATE_PROJECT_REQUEST,\r\n  CREATE_PROJECT_SUCCESS,\r\n  CREATE_PROJECT_FAILURE,\r\n  CREATE_JOB_REQUEST,\r\n  CREATE_JOB_SUCCESS,\r\n  CREATE_JOB_FAILURE,\r\n  DATA_REQUEST,\r\n  DATA_SUCCESS,\r\n  DATA_FAILURE,\r\n  IMAGE_UPLOAD_REQUEST,\r\n  IMAGE_UPLOAD_SUCCESS,\r\n  IMAGE_UPLOAD_FAILURE,\r\n  FETCH_JOBS_REQUEST,\r\n  FETCH_JOBS_SUCCESS,\r\n  FETCH_JOBS_FAILURE,\r\n  FETCH_PROJECTS_REQUEST,\r\n  FETCH_PROJECTS_SUCCESS,\r\n  FETCH_PROJECTS_FAILURE\r\n} from '../actions';\r\n\r\nexport default (\r\n  state = {\r\n    isLoggingIn: false,\r\n    isSigningUp: false,\r\n    isLoggingOut: false,\r\n    isVerifying: false,\r\n    loginError: false,\r\n    signupError: false,\r\n    logoutError: false,\r\n    isAuthenticated: false,\r\n    isAddingProject: false,\r\n    addingProjectError: false,\r\n    isAddingJob: false,\r\n    addingJobError: false,\r\n    isFetching: false,\r\n    fetchingError: false,\r\n    isUploading: false,\r\n    uploadError: false,\r\n    isFetchingJob: false,\r\n    fetchingJobError: false,\r\n    isFetchingProject: false,\r\n    fetchingProjectError: false,\r\n    job: {},\r\n    project: {},\r\n    data: {},\r\n    user: {},\r\n    error: {}\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case LOGIN_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: true,\r\n        loginError: false\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isAuthenticated: true,\r\n        user: action.user,\r\n        error: {}\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingIn: false,\r\n        isAuthenticated: false,\r\n        loginError: true,\r\n        error: action.error\r\n      };\r\n    case LOGOUT_REQUEST:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: true,\r\n        logoutError: false\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        isLoggingOut: false,\r\n        isAuthenticated: false\r\n      };\r\n    case LOGOUT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoggingOut: false,\r\n        logoutError: true,\r\n        error: action.error\r\n      };\r\n    case SIGNUP_REQUEST:\r\n      return {\r\n        ...state,\r\n        isSigningUp: true,\r\n        signupError: false\r\n      };\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isSigningUp: false,\r\n        isAuthenticated: true,\r\n        user: {}\r\n      };\r\n    case SIGNUP_FAILURE:\r\n      return {\r\n        isSigningUp: false,\r\n        signupError: true,\r\n        isAuthenticated: false,\r\n        error: action.error\r\n      };\r\n    case VERIFY_REQUEST:\r\n      return {\r\n        ...state,\r\n        isVerifying: true\r\n      };\r\n    case VERIFY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isVerifying: false\r\n      };\r\n    case CREATE_PROJECT_REQUEST:\r\n      return {\r\n        ...state,\r\n        isAddingProject: true,\r\n        addingProjectError: false\r\n      };\r\n    case CREATE_PROJECT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAddingProject: false,\r\n        addingProjectError: false\r\n      };\r\n    case CREATE_PROJECT_FAILURE:\r\n      return {\r\n        ...state,\r\n        isAddingProject: false,\r\n        addingProjectError: true,\r\n        error: action.error\r\n      };\r\n    case CREATE_JOB_REQUEST:\r\n      return {\r\n        ...state,\r\n        isAddingJob: true,\r\n        addingJobError: false\r\n      };\r\n    case CREATE_JOB_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAddingJob: false,\r\n        addingJobError: false\r\n      };\r\n    case CREATE_JOB_FAILURE:\r\n      return {\r\n        ...state,\r\n        isAddingJob: false,\r\n        addingJobError: true,\r\n        error: action.error\r\n      };\r\n    case DATA_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        fetchingError: false\r\n      };\r\n    case DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetching: false,\r\n        fetchingError: false,\r\n        data: action.data\r\n      };\r\n    case DATA_FAILURE:\r\n      return {\r\n        ...state,\r\n        fetchingError: true,\r\n        isFetching: false\r\n      };\r\n    case IMAGE_UPLOAD_REQUEST:\r\n      return {\r\n        ...state,\r\n        isUploading: true,\r\n        uploadError: false\r\n      };\r\n    case IMAGE_UPLOAD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isUploading: false,\r\n        uploadError: false\r\n      };\r\n    case IMAGE_UPLOAD_FAILURE:\r\n      return {\r\n        ...state,\r\n        isUploading: false,\r\n        uploadError: true\r\n      };\r\n    case FETCH_JOBS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetchingJob: true,\r\n        fetchingJobError: false\r\n      };\r\n    case FETCH_JOBS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetchingJob: false,\r\n        fetchingJobError: false,\r\n        job: action.job\r\n      };\r\n    case FETCH_JOBS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetchingJob: false,\r\n        fetchingJobError: true,\r\n        error: action.error\r\n      };\r\n    case FETCH_PROJECTS_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetchingProject: true,\r\n        fetchingProjectError: false\r\n      };\r\n    case FETCH_PROJECTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isFetchingProject: false,\r\n        fetchingProjectError: false,\r\n        project: action.project\r\n      };\r\n    case FETCH_PROJECTS_FAILURE:\r\n      return {\r\n        ...state,\r\n        isFetchingProject: false,\r\n        fetchingProjectError: true,\r\n        error: action.error\r\n      };\r\n    default:\r\n      return false;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from \"./app\";\r\nimport configureStore from \"./configureStore\";\r\n\r\nconst store = configureStore();\r\n\r\nfunction Root() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default Root;\r\n","/* eslint-disable linebreak-style */\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { verifyAuth } from './actions';\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore(persistedState) {\r\n  const store = createStore(\r\n    rootReducer,\r\n    persistedState,\r\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n  );\r\n  store.dispatch(verifyAuth());\r\n  return store;\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Root from \"./Root\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Root />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}